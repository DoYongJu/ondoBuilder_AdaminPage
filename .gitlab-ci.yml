stages:
  - set
  - build
  - package
  - deploy

cache:
  key: dependencies
  policy: pull-push
  paths:
    - node_modules/
    - dist/

install:
  stage: set
  cache:
    key: dependencies
    paths:
      - node_modules/
    policy: push
  script:
    - ". ~/.nvm/nvm.sh"
    - nvm --version 
    - nvm use 20.3.1
    - npm ci
  only:
    refs:
      - devbuild


build-source:
  stage: build
  cache:
    key: dependencies
    paths:
      - node_modules/
      - build/
    policy: pull-push
  script:
    - CI=false npm run build
  only:
    refs:
      - devbuild


package:
  stage: package
  cache:
    key: dependencies
    paths:
      - node_modules/
    policy: pull-push
  before_script:
    - sudo docker login docker.jointree.kr -u $DOCKER_ID -p $DOCKER_PASS
  script:
    - sudo docker build -t docker.jointree.kr/dev-helm/ondo-data-builder-front:v$CI_PIPELINE_IID .
    - sudo docker push docker.jointree.kr/dev-helm/ondo-data-builder-front:v$CI_PIPELINE_IID
  after_script:
    - sudo docker logout
  only:
    refs:
      - devbuild

deploy-login:
  stage: deploy
  script:
    - argocd login $ARGO_HOST --username $ARGO_ID --password $ARGO_PASS --insecure
  only:
    refs:
      - devbuild


deploy-imageup:
  stage: deploy
  script:
    - argocd app set ondo-gpt -p databuilderfe=docker.jointree.kr/dev-helm/ondo-data-builder-front:v$CI_PIPELINE_IID
    - argocd app sync ondo-gpt
  needs:
    - deploy-login
  only:
    refs:
      - devbuild